#include "SampleFilter.h"

static float filter_taps[SampleFilter::SAMPLEFILTER_TAP_NUM] = {
    0.0060427216127203025,
    0.005169161810358097,
    0.0038597379277017932,
    0.005158523011827938,
    0.002763273660754537,
    0.0024671074322303054,
    -0.00044982886588130783,
    -0.0010549794793956841,
    -0.003008122605447349,
    -0.0024133074656316235,
    -0.0024763055584272613,
    -0.00047248767162953964,
    0.000589908395113342,
    0.002565050282821076,
    0.002895377932701799,
    0.003187587219532264,
    0.001739522794010396,
    0.00034236572557415736,
    -0.0018708393639288211,
    -0.003098748195957689,
    -0.003946197384904166,
    -0.0031854708771816257,
    -0.001784361846617035,
    0.0006257516994951183,
    0.002693206838199007,
    0.004362200432072975,
    0.004548630039366778,
    0.003569554625051419,
    0.0012123582923573282,
    -0.001511175100538078,
    -0.0041349399280319644,
    -0.005531241068222686,
    -0.005458349032837816,
    -0.003575589567581049,
    -0.0005531403060881989,
    0.0029692336809512593,
    0.005759500734365599,
    0.0070664188712127,
    0.006219325321396185,
    0.0034438833872705733,
    -0.0006789598968976591,
    -0.00488056380423979,
    -0.00796240558739998,
    -0.008796771296230518,
    -0.007007641426260125,
    -0.0028513863860964725,
    0.002534651370901731,
    0.0076554346493074125,
    0.010845496839742562,
    0.010985218010090938,
    0.0076840588671858515,
    0.001658529695658894,
    -0.005536809565824698,
    -0.01176969794281276,
    -0.015014541770095209,
    -0.013899766284454806,
    -0.008262606982521677,
    0.0007326929496188583,
    0.010708159191981861,
    0.018711853051178805,
    0.02193487178881807,
    0.018622122376794826,
    0.008696125745941892,
    -0.005950564214349207,
    -0.021686699808028082,
    -0.033822998420451576,
    -0.03771285020733628,
    -0.029870115053454636,
    -0.008967396220182087,
    0.023608182454908457,
    0.06380388084587658,
    0.10558143464759286,
    0.14205622049547495,
    0.16691100418386526,
    0.1757229803456218,
    0.16691100418386526,
    0.14205622049547495,
    0.10558143464759286,
    0.06380388084587658,
    0.023608182454908457,
    -0.008967396220182087,
    -0.029870115053454636,
    -0.03771285020733628,
    -0.033822998420451576,
    -0.021686699808028082,
    -0.005950564214349207,
    0.008696125745941892,
    0.018622122376794826,
    0.02193487178881807,
    0.018711853051178805,
    0.010708159191981861,
    0.0007326929496188583,
    -0.008262606982521677,
    -0.013899766284454806,
    -0.015014541770095209,
    -0.01176969794281276,
    -0.005536809565824698,
    0.001658529695658894,
    0.0076840588671858515,
    0.010985218010090938,
    0.010845496839742562,
    0.0076554346493074125,
    0.002534651370901731,
    -0.0028513863860964725,
    -0.007007641426260125,
    -0.008796771296230518,
    -0.00796240558739998,
    -0.00488056380423979,
    -0.0006789598968976591,
    0.0034438833872705733,
    0.006219325321396185,
    0.0070664188712127,
    0.005759500734365599,
    0.0029692336809512593,
    -0.0005531403060881989,
    -0.003575589567581049,
    -0.005458349032837816,
    -0.005531241068222686,
    -0.0041349399280319644,
    -0.001511175100538078,
    0.0012123582923573282,
    0.003569554625051419,
    0.004548630039366778,
    0.004362200432072975,
    0.002693206838199007,
    0.0006257516994951183,
    -0.001784361846617035,
    -0.0031854708771816257,
    -0.003946197384904166,
    -0.003098748195957689,
    -0.0018708393639288211,
    0.00034236572557415736,
    0.001739522794010396,
    0.003187587219532264,
    0.002895377932701799,
    0.002565050282821076,
    0.000589908395113342,
    -0.00047248767162953964,
    -0.0024763055584272613,
    -0.0024133074656316235,
    -0.003008122605447349,
    -0.0010549794793956841,
    -0.00044982886588130783,
    0.0024671074322303054,
    0.002763273660754537,
    0.005158523011827938,
    0.0038597379277017932,
    0.005169161810358097,
    0.0060427216127203025};

SampleFilter::SampleFilter()
{
    for (int i = 0; i < SAMPLEFILTER_TAP_NUM; ++i)
        history[i] = 0;
    last_index = 0;
}

void SampleFilter::put(float input)
{
    history[last_index++] = input;
    if (last_index == SAMPLEFILTER_TAP_NUM)
        last_index = 0;
}

float SampleFilter::get()
{
    float acc = 0;
    int index = last_index;
    for (int i = 0; i < SAMPLEFILTER_TAP_NUM; ++i)
    {
        index = index != 0 ? index - 1 : SAMPLEFILTER_TAP_NUM - 1;
        acc += history[index] * filter_taps[i];
    };
    return acc;
}